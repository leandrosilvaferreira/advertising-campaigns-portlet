/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.lsp.liferay.portlet.advertising.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.lsp.liferay.portlet.advertising.model.CampaignLog;
import org.lsp.liferay.portlet.advertising.model.CampaignLogModel;
import org.lsp.liferay.portlet.advertising.model.CampaignLogSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CampaignLog service. Represents a row in the &quot;LSPAC_CampaignLog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.lsp.liferay.portlet.advertising.model.CampaignLogModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CampaignLogImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CampaignLogImpl
 * @see org.lsp.liferay.portlet.advertising.model.CampaignLog
 * @see org.lsp.liferay.portlet.advertising.model.CampaignLogModel
 * @generated
 */
@JSON(strict = true)
public class CampaignLogModelImpl extends BaseModelImpl<CampaignLog>
	implements CampaignLogModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a campaign log model instance should use the {@link org.lsp.liferay.portlet.advertising.model.CampaignLog} interface instead.
	 */
	public static final String TABLE_NAME = "LSPAC_CampaignLog";
	public static final Object[][] TABLE_COLUMNS = {
			{ "campaignLogId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "campaignId", Types.BIGINT },
			{ "userId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table LSPAC_CampaignLog (campaignLogId LONG not null primary key,companyId LONG,campaignId LONG,userId LONG)";
	public static final String TABLE_SQL_DROP = "drop table LSPAC_CampaignLog";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.lsp.liferay.portlet.advertising.model.CampaignLog"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.lsp.liferay.portlet.advertising.model.CampaignLog"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.lsp.liferay.portlet.advertising.model.CampaignLog"),
			true);
	public static long CAMPAIGNID_COLUMN_BITMASK = 1L;
	public static long CAMPAIGNLOGID_COLUMN_BITMASK = 2L;
	public static long COMPANYID_COLUMN_BITMASK = 4L;
	public static long USERID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CampaignLog toModel(CampaignLogSoap soapModel) {
		CampaignLog model = new CampaignLogImpl();

		model.setCampaignLogId(soapModel.getCampaignLogId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCampaignId(soapModel.getCampaignId());
		model.setUserId(soapModel.getUserId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CampaignLog> toModels(CampaignLogSoap[] soapModels) {
		List<CampaignLog> models = new ArrayList<CampaignLog>(soapModels.length);

		for (CampaignLogSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.lsp.liferay.portlet.advertising.model.CampaignLog"));

	public CampaignLogModelImpl() {
	}

	public long getPrimaryKey() {
		return _campaignLogId;
	}

	public void setPrimaryKey(long primaryKey) {
		setCampaignLogId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_campaignLogId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return CampaignLog.class;
	}

	public String getModelClassName() {
		return CampaignLog.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("campaignLogId", getCampaignLogId());
		attributes.put("companyId", getCompanyId());
		attributes.put("campaignId", getCampaignId());
		attributes.put("userId", getUserId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long campaignLogId = (Long)attributes.get("campaignLogId");

		if (campaignLogId != null) {
			setCampaignLogId(campaignLogId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long campaignId = (Long)attributes.get("campaignId");

		if (campaignId != null) {
			setCampaignId(campaignId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}
	}

	@JSON
	public long getCampaignLogId() {
		return _campaignLogId;
	}

	public void setCampaignLogId(long campaignLogId) {
		_columnBitmask |= CAMPAIGNLOGID_COLUMN_BITMASK;

		if (!_setOriginalCampaignLogId) {
			_setOriginalCampaignLogId = true;

			_originalCampaignLogId = _campaignLogId;
		}

		_campaignLogId = campaignLogId;
	}

	public long getOriginalCampaignLogId() {
		return _originalCampaignLogId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	public long getCampaignId() {
		return _campaignId;
	}

	public void setCampaignId(long campaignId) {
		_columnBitmask |= CAMPAIGNID_COLUMN_BITMASK;

		if (!_setOriginalCampaignId) {
			_setOriginalCampaignId = true;

			_originalCampaignId = _campaignId;
		}

		_campaignId = campaignId;
	}

	public long getOriginalCampaignId() {
		return _originalCampaignId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public CampaignLog toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (CampaignLog)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CampaignLog.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		CampaignLogImpl campaignLogImpl = new CampaignLogImpl();

		campaignLogImpl.setCampaignLogId(getCampaignLogId());
		campaignLogImpl.setCompanyId(getCompanyId());
		campaignLogImpl.setCampaignId(getCampaignId());
		campaignLogImpl.setUserId(getUserId());

		campaignLogImpl.resetOriginalValues();

		return campaignLogImpl;
	}

	public int compareTo(CampaignLog campaignLog) {
		long primaryKey = campaignLog.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		CampaignLog campaignLog = null;

		try {
			campaignLog = (CampaignLog)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = campaignLog.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CampaignLogModelImpl campaignLogModelImpl = this;

		campaignLogModelImpl._originalCampaignLogId = campaignLogModelImpl._campaignLogId;

		campaignLogModelImpl._setOriginalCampaignLogId = false;

		campaignLogModelImpl._originalCompanyId = campaignLogModelImpl._companyId;

		campaignLogModelImpl._setOriginalCompanyId = false;

		campaignLogModelImpl._originalCampaignId = campaignLogModelImpl._campaignId;

		campaignLogModelImpl._setOriginalCampaignId = false;

		campaignLogModelImpl._originalUserId = campaignLogModelImpl._userId;

		campaignLogModelImpl._setOriginalUserId = false;

		campaignLogModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CampaignLog> toCacheModel() {
		CampaignLogCacheModel campaignLogCacheModel = new CampaignLogCacheModel();

		campaignLogCacheModel.campaignLogId = getCampaignLogId();

		campaignLogCacheModel.companyId = getCompanyId();

		campaignLogCacheModel.campaignId = getCampaignId();

		campaignLogCacheModel.userId = getUserId();

		return campaignLogCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{campaignLogId=");
		sb.append(getCampaignLogId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", campaignId=");
		sb.append(getCampaignId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("org.lsp.liferay.portlet.advertising.model.CampaignLog");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>campaignLogId</column-name><column-value><![CDATA[");
		sb.append(getCampaignLogId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>campaignId</column-name><column-value><![CDATA[");
		sb.append(getCampaignId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CampaignLog.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			CampaignLog.class
		};
	private long _campaignLogId;
	private long _originalCampaignLogId;
	private boolean _setOriginalCampaignLogId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _campaignId;
	private long _originalCampaignId;
	private boolean _setOriginalCampaignId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private long _columnBitmask;
	private CampaignLog _escapedModelProxy;
}